#include <stdio.h>
#include <stdlib.h>

#define SIZE 5

struct Stack {
    int items[SIZE];
    int top;
};

void push(struct Stack *stack, int value) {
    if (stack->top == SIZE - 1) {
        printf("Stack is full\n");
    } else {
        stack->top++;
        stack->items[stack->top] = value;
    }
}

int pop(struct Stack *stack) {
    if (stack->top == -1) {
        printf("Stack is empty\n");
        return -1;
    } else {
        int value = stack->items[stack->top];
        stack->top--;
        return value;
    }
}

struct Queue {
    struct Stack stack1;
    struct Stack stack2;
};

void enqueue(struct Queue *queue, int value) {
    push(&queue->stack1, value);
}

int dequeue(struct Queue *queue) {
    if (queue->stack1.top == -1 && queue->stack2.top == -1) {
        printf("Queue is empty\n");
        return -1;
    }

    if (queue->stack2.top == -1) {
        while (queue->stack1.top != -1) {
            push(&queue->stack2, pop(&queue->stack1));
        }
    }

    return pop(&queue->stack2);
}

int main() {
    struct Queue queue;
    queue.stack1.top = -1;
    queue.stack2.top = -1;

    enqueue(&queue, 1);
    enqueue(&queue, 2);
    enqueue(&queue, 3);

    printf("%d\n", dequeue(&queue));
    printf("%d\n", dequeue(&queue));
    printf("%d\n", dequeue(&queue));

    return 0;
}
